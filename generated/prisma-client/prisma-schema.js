module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.8). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateBookmark {
  count: Int!
}

type AggregateUseraccount {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Bookmark {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  belongsTo: Useraccount!
  tags: [String!]!
  url: String!
  displayurl: String!
  description: String
  fromsource: String!
  tweetsourcetext: String
  tweetsourceuserid: String
  tweetsourceusername: String
  tweetsourcescreenname: String
}

type BookmarkConnection {
  pageInfo: PageInfo!
  edges: [BookmarkEdge]!
  aggregate: AggregateBookmark!
}

input BookmarkCreateInput {
  id: ID
  belongsTo: UseraccountCreateOneWithoutBookmarksInput!
  tags: BookmarkCreatetagsInput
  url: String!
  displayurl: String!
  description: String
  fromsource: String!
  tweetsourcetext: String
  tweetsourceuserid: String
  tweetsourceusername: String
  tweetsourcescreenname: String
}

input BookmarkCreateManyWithoutBelongsToInput {
  create: [BookmarkCreateWithoutBelongsToInput!]
  connect: [BookmarkWhereUniqueInput!]
}

input BookmarkCreatetagsInput {
  set: [String!]
}

input BookmarkCreateWithoutBelongsToInput {
  id: ID
  tags: BookmarkCreatetagsInput
  url: String!
  displayurl: String!
  description: String
  fromsource: String!
  tweetsourcetext: String
  tweetsourceuserid: String
  tweetsourceusername: String
  tweetsourcescreenname: String
}

type BookmarkEdge {
  node: Bookmark!
  cursor: String!
}

enum BookmarkOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
  displayurl_ASC
  displayurl_DESC
  description_ASC
  description_DESC
  fromsource_ASC
  fromsource_DESC
  tweetsourcetext_ASC
  tweetsourcetext_DESC
  tweetsourceuserid_ASC
  tweetsourceuserid_DESC
  tweetsourceusername_ASC
  tweetsourceusername_DESC
  tweetsourcescreenname_ASC
  tweetsourcescreenname_DESC
}

type BookmarkPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  tags: [String!]!
  url: String!
  displayurl: String!
  description: String
  fromsource: String!
  tweetsourcetext: String
  tweetsourceuserid: String
  tweetsourceusername: String
  tweetsourcescreenname: String
}

input BookmarkScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  displayurl: String
  displayurl_not: String
  displayurl_in: [String!]
  displayurl_not_in: [String!]
  displayurl_lt: String
  displayurl_lte: String
  displayurl_gt: String
  displayurl_gte: String
  displayurl_contains: String
  displayurl_not_contains: String
  displayurl_starts_with: String
  displayurl_not_starts_with: String
  displayurl_ends_with: String
  displayurl_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  fromsource: String
  fromsource_not: String
  fromsource_in: [String!]
  fromsource_not_in: [String!]
  fromsource_lt: String
  fromsource_lte: String
  fromsource_gt: String
  fromsource_gte: String
  fromsource_contains: String
  fromsource_not_contains: String
  fromsource_starts_with: String
  fromsource_not_starts_with: String
  fromsource_ends_with: String
  fromsource_not_ends_with: String
  tweetsourcetext: String
  tweetsourcetext_not: String
  tweetsourcetext_in: [String!]
  tweetsourcetext_not_in: [String!]
  tweetsourcetext_lt: String
  tweetsourcetext_lte: String
  tweetsourcetext_gt: String
  tweetsourcetext_gte: String
  tweetsourcetext_contains: String
  tweetsourcetext_not_contains: String
  tweetsourcetext_starts_with: String
  tweetsourcetext_not_starts_with: String
  tweetsourcetext_ends_with: String
  tweetsourcetext_not_ends_with: String
  tweetsourceuserid: String
  tweetsourceuserid_not: String
  tweetsourceuserid_in: [String!]
  tweetsourceuserid_not_in: [String!]
  tweetsourceuserid_lt: String
  tweetsourceuserid_lte: String
  tweetsourceuserid_gt: String
  tweetsourceuserid_gte: String
  tweetsourceuserid_contains: String
  tweetsourceuserid_not_contains: String
  tweetsourceuserid_starts_with: String
  tweetsourceuserid_not_starts_with: String
  tweetsourceuserid_ends_with: String
  tweetsourceuserid_not_ends_with: String
  tweetsourceusername: String
  tweetsourceusername_not: String
  tweetsourceusername_in: [String!]
  tweetsourceusername_not_in: [String!]
  tweetsourceusername_lt: String
  tweetsourceusername_lte: String
  tweetsourceusername_gt: String
  tweetsourceusername_gte: String
  tweetsourceusername_contains: String
  tweetsourceusername_not_contains: String
  tweetsourceusername_starts_with: String
  tweetsourceusername_not_starts_with: String
  tweetsourceusername_ends_with: String
  tweetsourceusername_not_ends_with: String
  tweetsourcescreenname: String
  tweetsourcescreenname_not: String
  tweetsourcescreenname_in: [String!]
  tweetsourcescreenname_not_in: [String!]
  tweetsourcescreenname_lt: String
  tweetsourcescreenname_lte: String
  tweetsourcescreenname_gt: String
  tweetsourcescreenname_gte: String
  tweetsourcescreenname_contains: String
  tweetsourcescreenname_not_contains: String
  tweetsourcescreenname_starts_with: String
  tweetsourcescreenname_not_starts_with: String
  tweetsourcescreenname_ends_with: String
  tweetsourcescreenname_not_ends_with: String
  AND: [BookmarkScalarWhereInput!]
  OR: [BookmarkScalarWhereInput!]
  NOT: [BookmarkScalarWhereInput!]
}

type BookmarkSubscriptionPayload {
  mutation: MutationType!
  node: Bookmark
  updatedFields: [String!]
  previousValues: BookmarkPreviousValues
}

input BookmarkSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BookmarkWhereInput
  AND: [BookmarkSubscriptionWhereInput!]
}

input BookmarkUpdateInput {
  belongsTo: UseraccountUpdateOneRequiredWithoutBookmarksInput
  tags: BookmarkUpdatetagsInput
  url: String
  displayurl: String
  description: String
  fromsource: String
  tweetsourcetext: String
  tweetsourceuserid: String
  tweetsourceusername: String
  tweetsourcescreenname: String
}

input BookmarkUpdateManyDataInput {
  tags: BookmarkUpdatetagsInput
  url: String
  displayurl: String
  description: String
  fromsource: String
  tweetsourcetext: String
  tweetsourceuserid: String
  tweetsourceusername: String
  tweetsourcescreenname: String
}

input BookmarkUpdateManyMutationInput {
  tags: BookmarkUpdatetagsInput
  url: String
  displayurl: String
  description: String
  fromsource: String
  tweetsourcetext: String
  tweetsourceuserid: String
  tweetsourceusername: String
  tweetsourcescreenname: String
}

input BookmarkUpdateManyWithoutBelongsToInput {
  create: [BookmarkCreateWithoutBelongsToInput!]
  delete: [BookmarkWhereUniqueInput!]
  connect: [BookmarkWhereUniqueInput!]
  set: [BookmarkWhereUniqueInput!]
  disconnect: [BookmarkWhereUniqueInput!]
  update: [BookmarkUpdateWithWhereUniqueWithoutBelongsToInput!]
  upsert: [BookmarkUpsertWithWhereUniqueWithoutBelongsToInput!]
  deleteMany: [BookmarkScalarWhereInput!]
  updateMany: [BookmarkUpdateManyWithWhereNestedInput!]
}

input BookmarkUpdateManyWithWhereNestedInput {
  where: BookmarkScalarWhereInput!
  data: BookmarkUpdateManyDataInput!
}

input BookmarkUpdatetagsInput {
  set: [String!]
}

input BookmarkUpdateWithoutBelongsToDataInput {
  tags: BookmarkUpdatetagsInput
  url: String
  displayurl: String
  description: String
  fromsource: String
  tweetsourcetext: String
  tweetsourceuserid: String
  tweetsourceusername: String
  tweetsourcescreenname: String
}

input BookmarkUpdateWithWhereUniqueWithoutBelongsToInput {
  where: BookmarkWhereUniqueInput!
  data: BookmarkUpdateWithoutBelongsToDataInput!
}

input BookmarkUpsertWithWhereUniqueWithoutBelongsToInput {
  where: BookmarkWhereUniqueInput!
  update: BookmarkUpdateWithoutBelongsToDataInput!
  create: BookmarkCreateWithoutBelongsToInput!
}

input BookmarkWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  belongsTo: UseraccountWhereInput
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  displayurl: String
  displayurl_not: String
  displayurl_in: [String!]
  displayurl_not_in: [String!]
  displayurl_lt: String
  displayurl_lte: String
  displayurl_gt: String
  displayurl_gte: String
  displayurl_contains: String
  displayurl_not_contains: String
  displayurl_starts_with: String
  displayurl_not_starts_with: String
  displayurl_ends_with: String
  displayurl_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  fromsource: String
  fromsource_not: String
  fromsource_in: [String!]
  fromsource_not_in: [String!]
  fromsource_lt: String
  fromsource_lte: String
  fromsource_gt: String
  fromsource_gte: String
  fromsource_contains: String
  fromsource_not_contains: String
  fromsource_starts_with: String
  fromsource_not_starts_with: String
  fromsource_ends_with: String
  fromsource_not_ends_with: String
  tweetsourcetext: String
  tweetsourcetext_not: String
  tweetsourcetext_in: [String!]
  tweetsourcetext_not_in: [String!]
  tweetsourcetext_lt: String
  tweetsourcetext_lte: String
  tweetsourcetext_gt: String
  tweetsourcetext_gte: String
  tweetsourcetext_contains: String
  tweetsourcetext_not_contains: String
  tweetsourcetext_starts_with: String
  tweetsourcetext_not_starts_with: String
  tweetsourcetext_ends_with: String
  tweetsourcetext_not_ends_with: String
  tweetsourceuserid: String
  tweetsourceuserid_not: String
  tweetsourceuserid_in: [String!]
  tweetsourceuserid_not_in: [String!]
  tweetsourceuserid_lt: String
  tweetsourceuserid_lte: String
  tweetsourceuserid_gt: String
  tweetsourceuserid_gte: String
  tweetsourceuserid_contains: String
  tweetsourceuserid_not_contains: String
  tweetsourceuserid_starts_with: String
  tweetsourceuserid_not_starts_with: String
  tweetsourceuserid_ends_with: String
  tweetsourceuserid_not_ends_with: String
  tweetsourceusername: String
  tweetsourceusername_not: String
  tweetsourceusername_in: [String!]
  tweetsourceusername_not_in: [String!]
  tweetsourceusername_lt: String
  tweetsourceusername_lte: String
  tweetsourceusername_gt: String
  tweetsourceusername_gte: String
  tweetsourceusername_contains: String
  tweetsourceusername_not_contains: String
  tweetsourceusername_starts_with: String
  tweetsourceusername_not_starts_with: String
  tweetsourceusername_ends_with: String
  tweetsourceusername_not_ends_with: String
  tweetsourcescreenname: String
  tweetsourcescreenname_not: String
  tweetsourcescreenname_in: [String!]
  tweetsourcescreenname_not_in: [String!]
  tweetsourcescreenname_lt: String
  tweetsourcescreenname_lte: String
  tweetsourcescreenname_gt: String
  tweetsourcescreenname_gte: String
  tweetsourcescreenname_contains: String
  tweetsourcescreenname_not_contains: String
  tweetsourcescreenname_starts_with: String
  tweetsourcescreenname_not_starts_with: String
  tweetsourcescreenname_ends_with: String
  tweetsourcescreenname_not_ends_with: String
  AND: [BookmarkWhereInput!]
}

input BookmarkWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Long

type Mutation {
  createBookmark(data: BookmarkCreateInput!): Bookmark!
  updateBookmark(data: BookmarkUpdateInput!, where: BookmarkWhereUniqueInput!): Bookmark
  updateManyBookmarks(data: BookmarkUpdateManyMutationInput!, where: BookmarkWhereInput): BatchPayload!
  upsertBookmark(where: BookmarkWhereUniqueInput!, create: BookmarkCreateInput!, update: BookmarkUpdateInput!): Bookmark!
  deleteBookmark(where: BookmarkWhereUniqueInput!): Bookmark
  deleteManyBookmarks(where: BookmarkWhereInput): BatchPayload!
  createUseraccount(data: UseraccountCreateInput!): Useraccount!
  updateUseraccount(data: UseraccountUpdateInput!, where: UseraccountWhereUniqueInput!): Useraccount
  updateManyUseraccounts(data: UseraccountUpdateManyMutationInput!, where: UseraccountWhereInput): BatchPayload!
  upsertUseraccount(where: UseraccountWhereUniqueInput!, create: UseraccountCreateInput!, update: UseraccountUpdateInput!): Useraccount!
  deleteUseraccount(where: UseraccountWhereUniqueInput!): Useraccount
  deleteManyUseraccounts(where: UseraccountWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  bookmark(where: BookmarkWhereUniqueInput!): Bookmark
  bookmarks(where: BookmarkWhereInput, orderBy: BookmarkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Bookmark]!
  bookmarksConnection(where: BookmarkWhereInput, orderBy: BookmarkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookmarkConnection!
  useraccount(where: UseraccountWhereUniqueInput!): Useraccount
  useraccounts(where: UseraccountWhereInput, orderBy: UseraccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Useraccount]!
  useraccountsConnection(where: UseraccountWhereInput, orderBy: UseraccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UseraccountConnection!
  node(id: ID!): Node
}

type Subscription {
  bookmark(where: BookmarkSubscriptionWhereInput): BookmarkSubscriptionPayload
  useraccount(where: UseraccountSubscriptionWhereInput): UseraccountSubscriptionPayload
}

type Useraccount {
  id: ID!
  registered_source: String!
  twitter_id: String
  twitter_display_name: String
  twitter_screen_name: String
  twitter_profile_image: String
  bookmarks(where: BookmarkWhereInput, orderBy: BookmarkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Bookmark!]
}

type UseraccountConnection {
  pageInfo: PageInfo!
  edges: [UseraccountEdge]!
  aggregate: AggregateUseraccount!
}

input UseraccountCreateInput {
  id: ID
  registered_source: String!
  twitter_id: String
  twitter_display_name: String
  twitter_screen_name: String
  twitter_profile_image: String
  bookmarks: BookmarkCreateManyWithoutBelongsToInput
}

input UseraccountCreateOneWithoutBookmarksInput {
  create: UseraccountCreateWithoutBookmarksInput
  connect: UseraccountWhereUniqueInput
}

input UseraccountCreateWithoutBookmarksInput {
  id: ID
  registered_source: String!
  twitter_id: String
  twitter_display_name: String
  twitter_screen_name: String
  twitter_profile_image: String
}

type UseraccountEdge {
  node: Useraccount!
  cursor: String!
}

enum UseraccountOrderByInput {
  id_ASC
  id_DESC
  registered_source_ASC
  registered_source_DESC
  twitter_id_ASC
  twitter_id_DESC
  twitter_display_name_ASC
  twitter_display_name_DESC
  twitter_screen_name_ASC
  twitter_screen_name_DESC
  twitter_profile_image_ASC
  twitter_profile_image_DESC
}

type UseraccountPreviousValues {
  id: ID!
  registered_source: String!
  twitter_id: String
  twitter_display_name: String
  twitter_screen_name: String
  twitter_profile_image: String
}

type UseraccountSubscriptionPayload {
  mutation: MutationType!
  node: Useraccount
  updatedFields: [String!]
  previousValues: UseraccountPreviousValues
}

input UseraccountSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UseraccountWhereInput
  AND: [UseraccountSubscriptionWhereInput!]
}

input UseraccountUpdateInput {
  registered_source: String
  twitter_id: String
  twitter_display_name: String
  twitter_screen_name: String
  twitter_profile_image: String
  bookmarks: BookmarkUpdateManyWithoutBelongsToInput
}

input UseraccountUpdateManyMutationInput {
  registered_source: String
  twitter_id: String
  twitter_display_name: String
  twitter_screen_name: String
  twitter_profile_image: String
}

input UseraccountUpdateOneRequiredWithoutBookmarksInput {
  create: UseraccountCreateWithoutBookmarksInput
  update: UseraccountUpdateWithoutBookmarksDataInput
  upsert: UseraccountUpsertWithoutBookmarksInput
  connect: UseraccountWhereUniqueInput
}

input UseraccountUpdateWithoutBookmarksDataInput {
  registered_source: String
  twitter_id: String
  twitter_display_name: String
  twitter_screen_name: String
  twitter_profile_image: String
}

input UseraccountUpsertWithoutBookmarksInput {
  update: UseraccountUpdateWithoutBookmarksDataInput!
  create: UseraccountCreateWithoutBookmarksInput!
}

input UseraccountWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  registered_source: String
  registered_source_not: String
  registered_source_in: [String!]
  registered_source_not_in: [String!]
  registered_source_lt: String
  registered_source_lte: String
  registered_source_gt: String
  registered_source_gte: String
  registered_source_contains: String
  registered_source_not_contains: String
  registered_source_starts_with: String
  registered_source_not_starts_with: String
  registered_source_ends_with: String
  registered_source_not_ends_with: String
  twitter_id: String
  twitter_id_not: String
  twitter_id_in: [String!]
  twitter_id_not_in: [String!]
  twitter_id_lt: String
  twitter_id_lte: String
  twitter_id_gt: String
  twitter_id_gte: String
  twitter_id_contains: String
  twitter_id_not_contains: String
  twitter_id_starts_with: String
  twitter_id_not_starts_with: String
  twitter_id_ends_with: String
  twitter_id_not_ends_with: String
  twitter_display_name: String
  twitter_display_name_not: String
  twitter_display_name_in: [String!]
  twitter_display_name_not_in: [String!]
  twitter_display_name_lt: String
  twitter_display_name_lte: String
  twitter_display_name_gt: String
  twitter_display_name_gte: String
  twitter_display_name_contains: String
  twitter_display_name_not_contains: String
  twitter_display_name_starts_with: String
  twitter_display_name_not_starts_with: String
  twitter_display_name_ends_with: String
  twitter_display_name_not_ends_with: String
  twitter_screen_name: String
  twitter_screen_name_not: String
  twitter_screen_name_in: [String!]
  twitter_screen_name_not_in: [String!]
  twitter_screen_name_lt: String
  twitter_screen_name_lte: String
  twitter_screen_name_gt: String
  twitter_screen_name_gte: String
  twitter_screen_name_contains: String
  twitter_screen_name_not_contains: String
  twitter_screen_name_starts_with: String
  twitter_screen_name_not_starts_with: String
  twitter_screen_name_ends_with: String
  twitter_screen_name_not_ends_with: String
  twitter_profile_image: String
  twitter_profile_image_not: String
  twitter_profile_image_in: [String!]
  twitter_profile_image_not_in: [String!]
  twitter_profile_image_lt: String
  twitter_profile_image_lte: String
  twitter_profile_image_gt: String
  twitter_profile_image_gte: String
  twitter_profile_image_contains: String
  twitter_profile_image_not_contains: String
  twitter_profile_image_starts_with: String
  twitter_profile_image_not_starts_with: String
  twitter_profile_image_ends_with: String
  twitter_profile_image_not_ends_with: String
  bookmarks_some: BookmarkWhereInput
  AND: [UseraccountWhereInput!]
}

input UseraccountWhereUniqueInput {
  id: ID
  twitter_id: String
}
`
      }
    